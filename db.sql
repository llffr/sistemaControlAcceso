--SQL SERVER 20
USE [master]
GO

CREATE DATABASE [SISTEMACONTROLACCESO]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'SISTEMACONTROLACCESO', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLSERVER20\MSSQL\DATA\SISTEMACONTROLACCESO.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'SISTEMACONTROLACCESO_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLSERVER20\MSSQL\DATA\SISTEMACONTROLACCESO_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET COMPATIBILITY_LEVEL = 160
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [SISTEMACONTROLACCESO].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ARITHABORT OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET AUTO_CLOSE ON 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET  ENABLE_BROKER 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET  MULTI_USER 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET DB_CHAINING OFF 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET QUERY_STORE = ON
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO
USE [SISTEMACONTROLACCESO]
GO
/****** Object:  Table [dbo].[CARGO]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CARGO](
	[IDCARGO] [int] IDENTITY(1,1) NOT NULL,
	[NOMCARGO] [varchar](100) NULL,
PRIMARY KEY CLUSTERED 
(
	[IDCARGO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CONTROLASISTENCIA]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CONTROLASISTENCIA](
	[IDCONTROL] [int] IDENTITY(1,1) NOT NULL,
	[DNI] [varchar](10) NULL,
	[DNIBARRA] [varchar](100) NULL,
	[H_ING1] [datetime] NULL,
	[H_ING2] [datetime] NULL,
	[H_SAL1] [datetime] NULL,
	[H_SAL2] [datetime] NULL,
	[FECHAING] [date] NULL,
PRIMARY KEY CLUSTERED 
(
	[IDCONTROL] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PERSONA]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PERSONA](
	[IDPER] [int] IDENTITY(1,1) NOT NULL,
	[DNI] [varchar](10) NOT NULL,
	[NOMBRE] [varchar](100) NULL,
	[APELLIDOS] [varchar](100) NULL,
	[TELF] [varchar](20) NULL,
	[IDCARGO] [int] NULL,
	[SECCION] [int] NULL,
	[SUBSECCION] [int] NULL,
	[ESTADO] [bit] NULL,
	[clave] [varchar](100) NULL,
PRIMARY KEY CLUSTERED 
(
	[DNI] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[CONTROLASISTENCIA] ADD  DEFAULT (getdate()) FOR [FECHAING]
GO
ALTER TABLE [dbo].[PERSONA] ADD  DEFAULT ((1)) FOR [SECCION]
GO
ALTER TABLE [dbo].[PERSONA] ADD  DEFAULT ((1)) FOR [SUBSECCION]
GO
ALTER TABLE [dbo].[PERSONA] ADD  DEFAULT ((1)) FOR [ESTADO]
GO
ALTER TABLE [dbo].[CONTROLASISTENCIA]  WITH CHECK ADD FOREIGN KEY([DNI])
REFERENCES [dbo].[PERSONA] ([DNI])
GO
ALTER TABLE [dbo].[PERSONA]  WITH CHECK ADD FOREIGN KEY([IDCARGO])
REFERENCES [dbo].[CARGO] ([IDCARGO])

GO

insert into CARGO(NOMCARGO)
values
('GERENTE'),
('SUPERVISOR'),
('ASISTENTE'),
('COORDINADOR'),
('TECNICO'),
('RECEPCIONISTA'),
('ANALISTA'),
('SEGURIDAD'),
('CONSERJE'),
('PRACTICANTE'),
('QA');

INSERT INTO PERSONA (DNI, NOMBRE, APELLIDOS, TELF, IDCARGO, SECCION, SUBSECCION, ESTADO, clave)
VALUES
(12345678, 'Juan', 'Perez', '999888777', 1, 1, 1, -1, 'root'),
(23456789, 'Lucia', 'Diaz', '999888770', 8, 4, 2, -1, NULL),
(32198765, 'Elena', 'Gutierrez', '999888772', 6, 3, 2, -1, NULL),
(34567890, 'Ricardo', 'Fernandez', '999888769', 9, 5, 1, -1, NULL),
(45678912, 'Luis', 'Lopez', '999888775', 3, 2, 1, -1, NULL),
(65432198, 'Maria', 'Martinez', '999888774', 4, 2, 2, -1, NULL),
(78912345, 'Carlos', 'Sanchez', '999888773', 5, 3, 1, -1, NULL),
(87654321, 'Ana', 'Garcia', '999888776', 2, 1, 2, -1, 'root'),
(98765432, 'Jose', 'Romero', '999888771', 7, 4, 1, -1, NULL);


INSERT INTO CONTROLASISTENCIA (DNI, DNIBARRA, H_ING1, H_ING2, H_SAL1, H_SAL2, FECHAING)
VALUES
(12345678, '123456789123', '2024-01-10 08:00:00.000', '2024-01-10 13:00:00.000', '2024-01-10 12:00:00.000', '2024-01-10 17:00:00.000', '2024-10-01'),
(87654321, '876543219876', '2024-01-10 08:15:00.000', '2024-01-10 13:15:00.000', '2024-01-10 12:15:00.000', '2024-01-10 17:15:00.000', '2024-10-01'),
(45678912, '456789124567', '2024-02-10 08:05:00.000', '2024-02-10 13:05:00.000', '2024-02-10 12:05:00.000', '2024-02-10 17:05:00.000', '2024-10-02'),
(65432198, '654321986543', '2024-02-10 08:10:00.000', '2024-02-10 13:10:00.000', '2024-02-10 12:10:00.000', '2024-02-10 17:10:00.000', '2024-10-02'),
(78912345, '789123459123', '2024-03-10 08:00:00.000', '2024-03-10 13:00:00.000', '2024-03-10 12:00:00.000', '2024-03-10 17:00:00.000', '2024-10-03'),
(98765432, '987654321234', '2024-04-10 08:25:00.000', '2024-04-10 13:25:00.000', '2024-04-10 12:25:00.000', '2024-04-10 17:25:00.000', '2024-10-04'),
(23456789, '234567891234', '2024-04-10 08:30:00.000', '2024-04-10 13:30:00.000', '2024-04-10 12:30:00.000', '2024-04-10 17:30:00.000', '2024-10-04'),
(34567890, '345678905678', '2024-05-10 08:00:00.000', '2024-05-10 13:00:00.000', '2024-05-10 12:00:00.000', '2024-05-10 17:00:00.000', '2024-10-05'),

/****** Object:  StoredProcedure [dbo].[eliminarCargo]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[eliminarCargo]
@COD INT
AS
BEGIN
DELETE FROM CARGO WHERE IDCARGO=@COD
END
GO
/****** Object:  StoredProcedure [dbo].[pa_buscarPersonalApellido]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[pa_buscarPersonalApellido]
@ape varchar(100)
as begin
select DNI,NOMBRE,APELLIDOS,TELF,c.NOMCARGO from PERSONA p inner join CARGO c on p.IDCARGO=c.IDCARGO
where APELLIDOS like '%'+@ape+'%'
end
GO
/****** Object:  StoredProcedure [dbo].[pa_consultaAsistenciaDNI]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[pa_consultaAsistenciaDNI]
	@dni varchar(20)
	as begin
	SELECT C.DNI,APELLIDOS,NOMBRE,CONVERT(VARCHAR(10), H_ING1,103)AS FECHA,
	--H_ING1
	CAST(DATEPART(HOUR, H_ING1)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_ING1)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_ING1)AS CHAR(2))AS[HH:MM:SS],
	--H_SAL1
	CAST(DATEPART(HOUR, H_SAL1)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_SAL1)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_SAL1)AS CHAR(2))AS[HH:MM:SS],
	--H_ING2
	CAST(DATEPART(HOUR, H_ING2)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_ING2)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_ING2)AS CHAR(2))AS[HH:MM:SS],
	--H_SAL2
	CAST(DATEPART(HOUR, H_SAL2)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_SAL2)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_SAL2)AS CHAR(2))AS[HH:MM:SS]
	FROM CONTROLASISTENCIA C INNER JOIN PERSONA P
	ON C.DNI=P.DNI where c.DNI=@dni
end
GO
/****** Object:  StoredProcedure [dbo].[pa_consultaAsistenciaxFecha]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[pa_consultaAsistenciaxFecha]
@f1 date, @f2 date, @ape varchar(100)
as
begin
select c.DNI, concat(APELLIDOS,' ',NOMBRE) as 'Apellidos y Nombres', CONVERT (VARCHAR(10), H_ING1,103) as FECHA,
---HING1
CAST( DATEPART(HOUR, H_ING1) AS CHAR(2))+':'+CAST( DATEPART(MINUTE, H_ING1) AS CHAR(2))+':'+CAST( DATEPART(SECOND, H_ING1) AS CHAR(2)) AS [HH:MM:SS],
---SALIDA1
CAST( DATEPART(HOUR, H_SAL1) AS CHAR(2))+':'+CAST( DATEPART(MINUTE, H_SAL1) AS CHAR(2))+':'+CAST( DATEPART(SECOND, H_SAL1) AS CHAR(2)) AS [HH:MM:SS],
---HING2
CAST( DATEPART(HOUR, H_ING2) AS CHAR(2))+':'+CAST( DATEPART(MINUTE, H_ING2) AS CHAR(2))+':'+CAST( DATEPART(SECOND, H_ING2) AS CHAR(2)) AS [HH:MM:SS],
---SALIDA2
CAST( DATEPART(HOUR, H_SAL2) AS CHAR(2))+':'+CAST( DATEPART(MINUTE, H_SAL2) AS CHAR(2))+':'+CAST( DATEPART(SECOND, H_SAL2) AS CHAR(2)) AS [HH:MM:SS],
---CONTAR HORAS TRABAJADAS
SUM(DATEDIFF(HOUR,H_ING1,H_SAL1))+SUM(DATEDIFF(HOUR,H_ING2,H_SAL2)) AS [T.HORAS] 
from CONTROLASISTENCIA c inner join PERSONA p
on c.DNI=p.DNI  where c.FECHAING between @f1 and @f2 and APELLIDOS like '%'+@ape+'%'
GROUP BY c.DNI,APELLIDOS,NOMBRE,H_ING1,H_SAL1,H_ING2,H_SAL2
ORDER BY APELLIDOS
end
GO
/****** Object:  StoredProcedure [dbo].[pa_consultaMarcacion]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[pa_consultaMarcacion]@fecha1 date,@fecha2 date,@ape varchar(100) as beginSELECT dbo.PERSONA.DNI, dbo.PERSONA.NOMBRE, dbo.PERSONA.APELLIDOS, dbo.CARGO.NOMCARGO, dbo.CONTROLASISTENCIA.H_ING1, dbo.CONTROLASISTENCIA.H_SAL1, dbo.CONTROLASISTENCIA.H_ING2,                   dbo.CONTROLASISTENCIA.H_SAL2, dbo.CONTROLASISTENCIA.FECHAINGFROM     dbo.CONTROLASISTENCIA INNER JOIN                  dbo.PERSONA ON dbo.CONTROLASISTENCIA.DNI = dbo.PERSONA.DNI INNER JOIN                  dbo.CARGO ON dbo.PERSONA.IDCARGO = dbo.CARGO.IDCARGO where CONTROLASISTENCIA.FECHAING between @fecha1 and @fecha2				  and APELLIDOS like '%' + @ape + '%'end
GO
/****** Object:  StoredProcedure [dbo].[pa_consultasFecha]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[pa_consultasFecha]
@F1 DATE, @F2 DATE
AS
BEGIN
    SELECT P.DNI, CONCAT(P.NOMBRE, ' ', P.APELLIDOS) AS EMPLEADO, 
           CA.H_ING1, CA.H_SAL1, CA.H_ING2, CA.H_SAL2, CA.FECHAING, C.NOMCARGO
    FROM CONTROLASISTENCIA CA
    INNER JOIN PERSONA P ON CA.DNI = P.DNI
    INNER JOIN CARGO C ON P.IDCARGO = C.IDCARGO
    WHERE CA.FECHAING BETWEEN @F1 AND @F2
    ORDER BY CA.FECHAING ASC
END
GO
/****** Object:  StoredProcedure [dbo].[pa_eliminarPersona]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[pa_eliminarPersona]
@DNI VARCHAR(10)
AS
BEGIN
DELETE FROM PERSONA WHERE DNI =@DNI
END
GO
/****** Object:  StoredProcedure [dbo].[pa_filtrarDatosPersonal]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[pa_filtrarDatosPersonal]
@dni varchar(10)
AS
BEGIN
    -- -- Verificar si el DNI existe
    -- IF (SELECT COUNT(*) FROM PERSONA WHERE DNI = @dni) = 0
    -- BEGIN
    --     PRINT 'El personal con el DNI proporcionado no está registrado.'
    -- END
    -- ELSE
    -- BEGIN
    --     -- Retorna más información sobre la persona, incluyendo cargo y estado
    SELECT p.IDPER,p.DNI ,p.NOMBRE, p.APELLIDOS, p.TELF, c.NOMCARGO
        FROM PERSONA p
         INNER JOIN CARGO c ON p.IDCARGO = c.IDCARGO
         WHERE p.DNI = @dni
    -- END
--select concat(NOMBRE,' ',APELLIDOS), DNI as datos from PERSONA where DNI=@dni
END
GO
/****** Object:  StoredProcedure [dbo].[pa_listarcargo]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[pa_listarcargo]
AS
BEGIN
SELECT * FROM CARGO
END
GO
/****** Object:  StoredProcedure [dbo].[pa_listarPersonal]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[pa_listarPersonal]
AS
SELECT DNI,NOMBRE,APELLIDOS,TELF,c.NOMCARGO FROM dbo.PERSONA p INNER JOIN CARGO c ON p.IDCARGO=C.IDCARGO
GO
/****** Object:  StoredProcedure [dbo].[sp_actualizarPersonal]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_actualizarPersonal]
@DNI VARCHAR(10),
@NOM VARCHAR(100),
@APE VARCHAR(100),
@TELE VARCHAR(20),
@IDCARGO INT,
@clave varchar(100)
AS
BEGIN
IF (SELECT COUNT(*) FROM PERSONA WHERE DNI = @DNI) = 0
BEGIN
PRINT 'LA PERSONA NO EXISTE'
    END
ELSE
BEGIN
UPDATE PERSONA
SET NOMBRE = @NOM,
APELLIDOS = @APE,
TELF = @TELE,
IDCARGO = @IDCARGO
where clave=@clave and DNI=@DNI
PRINT 'DATOS DE LA PERSONA ACTUALIZADOS CORRECTAMENTE'
END
END
GO
/****** Object:  StoredProcedure [dbo].[sp_registrarCargo]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_registrarCargo]
@NOMCAR VARCHAR(100)
AS
IF (SELECT COUNT(*) FROM CARGO WHERE NOMCARGO=@NOMCAR)>0
BEGIN
    PRINT 'ESTE CARGO YA ESTA REGISTRADO'
END
ELSE
BEGIN
    INSERT INTO CARGO(NOMCARGO) VALUES(@NOMCAR)
END
GO
/****** Object:  StoredProcedure [dbo].[sp_registrarPersonal]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_registrarPersonal]
@DNI varchar(10),
@NOM varchar(100),
@APE varchar(100),
@TELE varchar(20),
@IDCARGO INT,
@passwd varchar(100)
AS
IF (SELECT COUNT(*) FROM PERSONA WHERE NOMBRE=@NOM)>0
BEGIN
PRINT 'EL PERSONAL YA SE ENCUENTRA REGISTRADO'
END
ELSE
BEGIN
INSERT INTO PERSONA (DNI,NOMBRE,APELLIDOS,TELF,IDCARGO,clave)values(@DNI,@NOM,@APE,@TELE,@IDCARGO,@passwd)
END
GO
/****** Object:  StoredProcedure [dbo].[sp_registroAsistenciaPersonal]    Script Date: 11/26/2024 3:25:38 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[sp_registroAsistenciaPersonal]
@DNI VARCHAR(10)
AS
DECLARE @DIA INT,@MES INT,@ANHO INT,@CANT INT,@COD INT
SET  @DIA=(SELECT DATEPART(DD,GETDATE()))
SET  @MES=(SELECT DATEPART(MM,GETDATE()))
SET  @ANHO=(SELECT DATEPART(YY,GETDATE()))
SET @CANT=(SELECT COUNT(*) FROM CONTROLASISTENCIA WHERE DNI=@DNI and DATEPART(DD,H_ING1)=@DIA 
AND DATEPART(MM,H_ING1)=@MES AND DATEPART(YY,H_ING1)=@ANHO)
SET @COD=(SELECT IDCONTROL FROM CONTROLASISTENCIA WHERE DNI=@DNI and DATEPART(DD,H_ING1)=@DIA 
AND DATEPART(MM,H_ING1)=@MES AND DATEPART(YY,H_ING1)=@ANHO)
IF @CANT=0
	BEGIN
		INSERT INTO CONTROLASISTENCIA (DNI,H_ING1) VALUES(@DNI,GETDATE())
	END
	ELSE
	BEGIN
	SET @CANT =(SELECT COUNT(*) FROM CONTROLASISTENCIA WHERE IDCONTROL=@COD AND H_SAL1 IS NULL)
		IF @CANT=1
		BEGIN
			UPDATE CONTROLASISTENCIA SET H_SAL1=GETDATE() WHERE IDCONTROL=@COD
		END
		ELSE
		BEGIN
			SET @CANT =(SELECT COUNT(*) FROM CONTROLASISTENCIA WHERE IDCONTROL=@COD AND H_ING2 IS NULL)
			IF @CANT=1
			BEGIN
				UPDATE CONTROLASISTENCIA SET H_ING2=GETDATE() WHERE IDCONTROL=@COD
			END
			ELSE
			BEGIN
				UPDATE CONTROLASISTENCIA SET H_SAL2=GETDATE() WHERE IDCONTROL=@COD
		END
	END
END
GO
USE [master]
GO
ALTER DATABASE [SISTEMACONTROLACCESO] SET  READ_WRITE 
GO
