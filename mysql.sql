CREATE DATABASE SISTEMACONTROLACCESO;
USE SISTEMACONTROLACCESO;

CREATE TABLE CARGO (
  IDCARGO INT AUTO_INCREMENT PRIMARY KEY,
  NOMCARGO VARCHAR(100)
);

CREATE TABLE PERSONA (
  IDPER INT AUTO_INCREMENT PRIMARY KEY,
  DNI VARCHAR(10) UNIQUE,
  NOMBRE VARCHAR(100),
  APELLIDOS VARCHAR(100),
  TELF VARCHAR(20),
  IDCARGO INT,
  SECCION INT DEFAULT 1,
  SUBSECCION INT DEFAULT 1,
  ESTADO BOOLEAN DEFAULT TRUE,
  clave VARCHAR(100),
  FOREIGN KEY (IDCARGO) REFERENCES CARGO(IDCARGO)
);

CREATE TABLE CONTROLASISTENCIA (
  IDCONTROL INT AUTO_INCREMENT PRIMARY KEY,
  DNI VARCHAR(10),
  DNIBARRA VARCHAR(100),
  H_ING1 DATETIME,
  H_ING2 DATETIME,
  H_SAL1 DATETIME,
  H_SAL2 DATETIME,
  FECHAING DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (DNI) REFERENCES PERSONA(DNI)
);

insert into CARGO(NOMCARGO) values
('GERENTE'),
('SUPERVISOR'),
('ASISTENTE'),
('COORDINADOR'),
('TECNICO'),
('RECEPCIONISTA'),
('ANALISTA'),
('SEGURIDAD'),
('CONSERJE'),
('PRACTICANTE'),
('QA');

INSERT INTO PERSONA (DNI, NOMBRE, APELLIDOS, TELF, IDCARGO, SECCION, SUBSECCION, ESTADO, clave) VALUES
(12345678, 'Juan', 'Perez', '999888777', 1, 1, 1, -1, 'root'),
(23456789, 'Lucia', 'Diaz', '999888770', 8, 4, 2, -1, NULL),
(32198765, 'Elena', 'Gutierrez', '999888772', 6, 3, 2, -1, NULL),
(34567890, 'Ricardo', 'Fernandez', '999888769', 9, 5, 1, -1, NULL),
(45678912, 'Luis', 'Lopez', '999888775', 3, 2, 1, -1, NULL),
(65432198, 'Maria', 'Martinez', '999888774', 4, 2, 2, -1, NULL),
(78912345, 'Carlos', 'Sanchez', '999888773', 5, 3, 1, -1, NULL),
(87654321, 'Ana', 'Garcia', '999888776', 2, 1, 2, -1, 'root'),
(98765432, 'Jose', 'Romero', '999888771', 7, 4, 1, -1, NULL);

INSERT INTO CONTROLASISTENCIA (DNI, DNIBARRA, H_ING1, H_ING2, H_SAL1, H_SAL2, FECHAING) VALUES
(12345678, '123456789123', '2024-01-10 08:00:00.000', '2024-01-10 13:00:00.000', '2024-01-10 12:00:00.000', '2024-01-10 17:00:00.000', '2024-10-01'),
(87654321, '876543219876', '2024-01-10 08:15:00.000', '2024-01-10 13:15:00.000', '2024-01-10 12:15:00.000', '2024-01-10 17:15:00.000', '2024-10-01'),
(45678912, '456789124567', '2024-02-10 08:05:00.000', '2024-02-10 13:05:00.000', '2024-02-10 12:05:00.000', '2024-02-10 17:05:00.000', '2024-10-02'),
(65432198, '654321986543', '2024-02-10 08:10:00.000', '2024-02-10 13:10:00.000', '2024-02-10 12:10:00.000', '2024-02-10 17:10:00.000', '2024-10-02'),
(78912345, '789123459123', '2024-03-10 08:00:00.000', '2024-03-10 13:00:00.000', '2024-03-10 12:00:00.000', '2024-03-10 17:00:00.000', '2024-10-03'),
(98765432, '987654321234', '2024-04-10 08:25:00.000', '2024-04-10 13:25:00.000', '2024-04-10 12:25:00.000', '2024-04-10 17:25:00.000', '2024-10-04'),
(23456789, '234567891234', '2024-04-10 08:30:00.000', '2024-04-10 13:30:00.000', '2024-04-10 12:30:00.000', '2024-04-10 17:30:00.000', '2024-10-04'),
(34567890, '345678905678', '2024-05-10 08:00:00.000', '2024-05-10 13:00:00.000', '2024-05-10 12:00:00.000', '2024-05-10 17:00:00.000', '2024-10-05');



DELIMITER //
CREATE PROCEDURE eliminarCargo(IN COD INT)
BEGIN
    DELETE FROM CARGO WHERE IDCARGO = COD;
END //

DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_buscarPersonalApellido(IN ape VARCHAR(100))
BEGIN
    SELECT DNI, NOMBRE, APELLIDOS, TELF, c.NOMCARGO
    FROM PERSONA p
    INNER JOIN CARGO c ON p.IDCARGO = c.IDCARGO
    WHERE APELLIDOS LIKE CONCAT('%', ape, '%');
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_consultaAsistenciaDNI(IN dni VARCHAR(20))
BEGIN
    SELECT 
        C.DNI,
        APELLIDOS,
        NOMBRE,
        DATE_FORMAT(H_ING1, '%d/%m/%Y') AS FECHA,
        -- H_ING1
        DATE_FORMAT(H_ING1, '%H:%i:%s') AS H_ING1_HORA,
        -- H_SAL1
        DATE_FORMAT(H_SAL1, '%H:%i:%s') AS H_SAL1_HORA,
        -- H_ING2
        DATE_FORMAT(H_ING2, '%H:%i:%s') AS H_ING2_HORA,
        -- H_SAL2
        DATE_FORMAT(H_SAL2, '%H:%i:%s') AS H_SAL2_HORA
    FROM CONTROLASISTENCIA C 
    INNER JOIN PERSONA P ON C.DNI = P.DNI
    WHERE C.DNI = dni;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_consultaAsistenciaxFecha(
    IN f1 DATE, 
    IN f2 DATE, 
    IN ape VARCHAR(100)
)
BEGIN
    SELECT 
        c.DNI,
        CONCAT(APELLIDOS, ' ', NOMBRE) AS `Apellidos y Nombres`,
        DATE_FORMAT(H_ING1, '%d/%m/%Y') AS FECHA,
        -- H_ING1
        DATE_FORMAT(H_ING1, '%H:%i:%s') AS H_ING1_HORA,
        -- H_SAL1
        DATE_FORMAT(H_SAL1, '%H:%i:%s') AS H_SAL1_HORA,
        -- H_ING2
        DATE_FORMAT(H_ING2, '%H:%i:%s') AS H_ING2_HORA,
        -- H_SAL2
        DATE_FORMAT(H_SAL2, '%H:%i:%s') AS H_SAL2_HORA,
        -- HORAS TRABAJADAS
        SUM(TIMESTAMPDIFF(HOUR, H_ING1, H_SAL1) + TIMESTAMPDIFF(HOUR, H_ING2, H_SAL2)) AS `T.HORAS`
    FROM CONTROLASISTENCIA c
    INNER JOIN PERSONA p ON c.DNI = p.DNI
    WHERE c.FECHAING BETWEEN f1 AND f2
      AND APELLIDOS LIKE CONCAT('%', ape, '%')
    GROUP BY c.DNI, APELLIDOS, NOMBRE, H_ING1, H_SAL1, H_ING2, H_SAL2
    ORDER BY APELLIDOS;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE pa_consultaMarcacion(
    IN fecha1 DATE,
    IN fecha2 DATE,
    IN ape VARCHAR(100)
)
BEGIN
    SELECT 
        P.DNI,
        P.NOMBRE,
        P.APELLIDOS,
        C.NOMCARGO,
        CA.H_ING1,
        CA.H_SAL1,
        CA.H_ING2,
        CA.H_SAL2,
        CA.FECHAING
    FROM CONTROLASISTENCIA CA
    INNER JOIN PERSONA P ON CA.DNI = P.DNI
    INNER JOIN CARGO C ON P.IDCARGO = C.IDCARGO
    WHERE CA.FECHAING BETWEEN fecha1 AND fecha2
      AND P.APELLIDOS LIKE CONCAT('%', ape, '%');
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_consultasFecha(
    IN F1 DATE,
    IN F2 DATE
)
BEGIN
    SELECT 
        P.DNI,
        CONCAT(P.NOMBRE, ' ', P.APELLIDOS) AS EMPLEADO,
        CA.H_ING1,
        CA.H_SAL1,
        CA.H_ING2,
        CA.H_SAL2,
        CA.FECHAING,
        C.NOMCARGO
    FROM CONTROLASISTENCIA CA
    INNER JOIN PERSONA P ON CA.DNI = P.DNI
    INNER JOIN CARGO C ON P.IDCARGO = C.IDCARGO
    WHERE CA.FECHAING BETWEEN F1 AND F2
    ORDER BY CA.FECHAING ASC;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_eliminarPersona(
    IN DNI VARCHAR(10)
)
BEGIN
    DELETE FROM PERSONA WHERE DNI = DNI;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_filtrarDatosPersonal(
    IN dni VARCHAR(10)
)
BEGIN
    SELECT 
        P.IDPER,
        P.DNI,
        P.NOMBRE,
        P.APELLIDOS,
        P.TELF,
        C.NOMCARGO
    FROM PERSONA P
    INNER JOIN CARGO C ON P.IDCARGO = C.IDCARGO
    WHERE P.DNI = dni;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_listarcargo()
BEGIN
    SELECT * FROM CARGO;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE pa_listarPersonal()
BEGIN
    SELECT 
        P.DNI,
        P.NOMBRE,
        P.APELLIDOS,
        P.TELF,
        C.NOMCARGO
    FROM PERSONA P
    INNER JOIN CARGO C ON P.IDCARGO = C.IDCARGO;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE sp_actualizarPersonal(
    IN p_DNI VARCHAR(10),
    IN p_NOM VARCHAR(100),
    IN p_APE VARCHAR(100),
    IN p_TELE VARCHAR(20),
    IN p_IDCARGO INT,
    IN p_clave VARCHAR(100)
)
BEGIN
    IF (SELECT COUNT(*) FROM PERSONA WHERE DNI = p_DNI) = 0 THEN
        SELECT 'LA PERSONA NO EXISTE' AS mensaje;
    ELSE
        UPDATE PERSONA
        SET 
            NOMBRE = p_NOM,
            APELLIDOS = p_APE,
            TELF = p_TELE,
            IDCARGO = p_IDCARGO
        WHERE clave = p_clave AND DNI = p_DNI;

        SELECT 'DATOS DE LA PERSONA ACTUALIZADOS CORRECTAMENTE' AS mensaje;
    END IF;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE sp_registrarCargo(
    IN p_NOMCAR VARCHAR(100)
)
BEGIN
    IF (SELECT COUNT(*) FROM CARGO WHERE NOMCARGO = p_NOMCAR) > 0 THEN
        SELECT 'ESTE CARGO YA ESTA REGISTRADO' AS mensaje;
    ELSE
        INSERT INTO CARGO (NOMCARGO) VALUES (p_NOMCAR);
        SELECT 'CARGO REGISTRADO EXITOSAMENTE' AS mensaje;
    END IF;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE sp_registrarPersonal(
    IN p_DNI VARCHAR(10),
    IN p_NOM VARCHAR(100),
    IN p_APE VARCHAR(100),
    IN p_TELE VARCHAR(20),
    IN p_IDCARGO INT,
    IN p_passwd VARCHAR(100)
)
BEGIN
    IF (SELECT COUNT(*) FROM PERSONA WHERE NOMBRE = p_NOM) > 0 THEN
        SELECT 'EL PERSONAL YA SE ENCUENTRA REGISTRADO' AS mensaje;
    ELSE
        INSERT INTO PERSONA (DNI, NOMBRE, APELLIDOS, TELF, IDCARGO, clave)
        VALUES (p_DNI, p_NOM, p_APE, p_TELE, p_IDCARGO, p_passwd);
        SELECT 'PERSONAL REGISTRADO CORRECTAMENTE' AS mensaje;
    END IF;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE sp_registroAsistenciaPersonal(
    IN p_DNI VARCHAR(10)
)
BEGIN
    DECLARE v_DIA INT;
    DECLARE v_MES INT;
    DECLARE v_ANHO INT;
    DECLARE v_CANT INT;
    DECLARE v_COD INT;

    SET v_DIA = DAY(CURDATE());
    SET v_MES = MONTH(CURDATE());
    SET v_ANHO = YEAR(CURDATE());

    SET v_CANT = (
        SELECT COUNT(*) FROM CONTROLASISTENCIA 
        WHERE DNI = p_DNI 
          AND DAY(H_ING1) = v_DIA 
          AND MONTH(H_ING1) = v_MES 
          AND YEAR(H_ING1) = v_ANHO
    );

    SET v_COD = (
        SELECT IDCONTROL FROM CONTROLASISTENCIA 
        WHERE DNI = p_DNI 
          AND DAY(H_ING1) = v_DIA 
          AND MONTH(H_ING1) = v_MES 
          AND YEAR(H_ING1) = v_ANHO
        LIMIT 1
    );

    IF v_CANT = 0 THEN
        INSERT INTO CONTROLASISTENCIA (DNI, H_ING1) VALUES (p_DNI, NOW());
    ELSE
        SET v_CANT = (
            SELECT COUNT(*) FROM CONTROLASISTENCIA 
            WHERE IDCONTROL = v_COD AND H_SAL1 IS NULL
        );
        IF v_CANT = 1 THEN
            UPDATE CONTROLASISTENCIA SET H_SAL1 = NOW() WHERE IDCONTROL = v_COD;
        ELSE
            SET v_CANT = (
                SELECT COUNT(*) FROM CONTROLASISTENCIA 
                WHERE IDCONTROL = v_COD AND H_ING2 IS NULL
            );
            IF v_CANT = 1 THEN
                UPDATE CONTROLASISTENCIA SET H_ING2 = NOW() WHERE IDCONTROL = v_COD;
            ELSE
                UPDATE CONTROLASISTENCIA SET H_SAL2 = NOW() WHERE IDCONTROL = v_COD;
            END IF;
        END IF;
    END IF;
END //
DELIMITER ;
